0 info it worked if it ends with ok
1 verbose cli [ 'node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   'watson-translate-stream',
1 verbose cli   '--save' ]
2 info using npm@2.5.1
3 info using node@v0.12.0
4 silly cache add args [ 'watson-translate-stream', null ]
5 verbose cache add spec watson-translate-stream
6 silly cache add parsed spec { raw: 'watson-translate-stream',
6 silly cache add   scope: null,
6 silly cache add   name: 'watson-translate-stream',
6 silly cache add   rawSpec: '',
6 silly cache add   spec: '*',
6 silly cache add   type: 'range' }
7 verbose addNamed watson-translate-stream@*
8 silly addNamed semver.valid null
9 silly addNamed semver.validRange *
10 silly addNameRange { name: 'watson-translate-stream', range: '*', hasData: false }
11 silly mapToRegistry name watson-translate-stream
12 silly mapToRegistry using default registry
13 silly mapToRegistry registry https://registry.npmjs.org/
14 silly mapToRegistry uri https://registry.npmjs.org/watson-translate-stream
15 verbose addNameRange registry:https://registry.npmjs.org/watson-translate-stream not in flight; fetching
16 verbose request uri https://registry.npmjs.org/watson-translate-stream
17 verbose request no auth needed
18 info attempt registry request try #1 at 5:38:52 PM
19 verbose request using bearer token for auth
20 verbose request id 7de221c1cdeeb563
21 http request GET https://registry.npmjs.org/watson-translate-stream
22 http 200 https://registry.npmjs.org/watson-translate-stream
23 silly get cb [ 200,
23 silly get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
23 silly get     etag: '"ADB8W2UANA5FPF6W90NKENGQ8"',
23 silly get     'content-type': 'application/json',
23 silly get     'cache-control': 'max-age=300',
23 silly get     'content-length': '5465',
23 silly get     'accept-ranges': 'bytes',
23 silly get     date: 'Fri, 18 Dec 2015 22:38:53 GMT',
23 silly get     via: '1.1 varnish',
23 silly get     connection: 'keep-alive',
23 silly get     'x-served-by': 'cache-atl6229-ATL',
23 silly get     'x-cache': 'MISS',
23 silly get     'x-cache-hits': '0',
23 silly get     'x-timer': 'S1450478332.931086,VS0,VE350',
23 silly get     vary: 'Accept' } ]
24 verbose get saving watson-translate-stream to /Users/thomashowe/.npm/registry.npmjs.org/watson-translate-stream/.cache.json
25 silly addNameRange number 2 { name: 'watson-translate-stream', range: '*', hasData: true }
26 silly addNameRange versions [ 'watson-translate-stream', [ '0.1.0', '0.2.0' ] ]
27 verbose addNamed watson-translate-stream@0.2.0
28 silly addNamed semver.valid 0.2.0
29 silly addNamed semver.validRange 0.2.0
30 silly cache afterAdd watson-translate-stream@0.2.0
31 verbose afterAdd /Users/thomashowe/.npm/watson-translate-stream/0.2.0/package/package.json not in flight; writing
32 verbose afterAdd /Users/thomashowe/.npm/watson-translate-stream/0.2.0/package/package.json written
33 silly install resolved [ { name: 'watson-translate-stream',
33 silly install resolved     version: '0.2.0',
33 silly install resolved     description: 'A duplex stream that detects and translates natural language using IBM Watson',
33 silly install resolved     main: 'lib/index.js',
33 silly install resolved     scripts: { test: 'echo "Error: no test specified" && exit 1' },
33 silly install resolved     repository:
33 silly install resolved      { type: 'git',
33 silly install resolved        url: 'https://github.com/green-bot/watson-translate-stream.git' },
33 silly install resolved     keywords:
33 silly install resolved      [ 'green-bot',
33 silly install resolved        'watson',
33 silly install resolved        'ibm',
33 silly install resolved        'nlp',
33 silly install resolved        'translate',
33 silly install resolved        'translation',
33 silly install resolved        'stream',
33 silly install resolved        'node.js',
33 silly install resolved        'node',
33 silly install resolved        'translator' ],
33 silly install resolved     author:
33 silly install resolved      { name: 'Thomas Howe',
33 silly install resolved        email: 'ghostofbasho@gmail.com',
33 silly install resolved        url: 'http://www.thomashowe.me' },
33 silly install resolved     contributors: [ [Object] ],
33 silly install resolved     license: 'MIT',
33 silly install resolved     bugs: { url: 'https://github.com/green-bot/watson-translate-stream/issues' },
33 silly install resolved     devDependencies: { 'coffee-script': '1.10.0' },
33 silly install resolved     dependencies: { multipipe: '0.2.1', 'watson-developer-cloud': '1.0.6' },
33 silly install resolved     readme: '# watson-translate-stream\n\nA duplex stream that detects and translates natural language using IBM Watson.\n\n## Installation\n\nDownload node at [nodejs.org](http://nodejs.org) and install it, if you haven\'t already.\n\n```sh\nnpm install watson-translate-stream --save\n```\n\n## Usage\n\nWatson translate stream uses a duplex stream to manage two text streams between\ndiffering natural languages.\n\n### Constructor\n```sh\nclass LanguageStream extends Stream.Transform\n constructor: (@fromLanguage, @toLanguage) ->\n```\n\n### Snippet\n```sh\nLanguageFilter = require(\'watson-translate-stream\')\nPipe = require("multipipe")\n\n# Create a shell process to attach to.\ncmd =  \'telnet\'\narguments = [\'localhost\', \'3001\']\nprocess = ChildProcess.spawn(cmd, arguments)\n\n# Make a new language filter, and set the egress stream language to\n# english. In this example, we know what we are speaking (en), and\n# we don\'t set the far end language so it can be detected and translated.\n# To turn off detection, specify both ingress and egress languages.\n# Supports the current Watson languages (en, es, fr, ko)\nlanguage = new LanguageFilter(\'en\')\n\ningressProcessStream = Pipe(language.ingressStream, process.stdin)\negressProcessStream = Pipe(process.stdout, language.egressStream)\n```\n\n\n## Dependencies\n\n- [multipipe](https://github.com/juliangruber/multipipe): pipe streams with centralized error handling\n- [watson-developer-cloud](https://github.com/watson-developer-cloud/node-sdk): Client library to use the IBM Watson Services and AlchemyAPI\n\n## Dev Dependencies\n\n- [coffee-script](https://github.com/jashkenas/coffeescript): Unfancy JavaScript\n\n\n## License\n\nMIT\n\n_Generated by [package-json-to-readme](https://github.com/zeke/package-json-to-readme)_\n',
33 silly install resolved     readmeFilename: 'README.md',
33 silly install resolved     gitHead: '7d02234ce196361a38ec83ac895674e27d69b2db',
33 silly install resolved     _id: 'watson-translate-stream@0.2.0',
33 silly install resolved     _shasum: '89469f98656d890b52547d85d53a2f697470f610',
33 silly install resolved     _from: 'watson-translate-stream@*' } ]
34 info install watson-translate-stream@0.2.0 into /Users/thomashowe/Documents/src/greenbot
35 info installOne watson-translate-stream@0.2.0
36 verbose installOne of watson-translate-stream to /Users/thomashowe/Documents/src/greenbot not in flight; installing
37 verbose lock using /Users/thomashowe/.npm/_locks/watson-translate-stream-18cbaadbfa699818.lock for /Users/thomashowe/Documents/src/greenbot/node_modules/watson-translate-stream
38 verbose unlock done using /Users/thomashowe/.npm/_locks/watson-translate-stream-18cbaadbfa699818.lock for /Users/thomashowe/Documents/src/greenbot/node_modules/watson-translate-stream
39 verbose stack Error: Appears to be a git repo or submodule.
39 verbose stack     at /usr/local/lib/node_modules/npm/node_modules/npm-install-checks/index.js:139:15
39 verbose stack     at FSReqWrap.oncomplete (fs.js:99:15)
40 verbose cwd /Users/thomashowe/Documents/src/greenbot
41 error Darwin 15.0.0
42 error argv "node" "/usr/local/bin/npm" "install" "watson-translate-stream" "--save"
43 error node v0.12.0
44 error npm  v2.5.1
45 error path /Users/thomashowe/Documents/src/greenbot/node_modules/watson-translate-stream
46 error code EISGIT
47 error git Appears to be a git repo or submodule.
47 error git     /Users/thomashowe/Documents/src/greenbot/node_modules/watson-translate-stream
47 error git Refusing to remove it. Update manually,
47 error git or move it out of the way first.
48 verbose exit [ 1, true ]
